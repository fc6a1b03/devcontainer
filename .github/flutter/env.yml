name: Snapshot Flutter Env (Java+Flutter only) to Docker

on:
  workflow_dispatch:
    inputs:
      flutter-version:
        description: 'Flutter stable version (x.y.z) | 3.x | 3.24.5'
        required: true
        default: '3.x'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/flutter-env

jobs:
  snapshot:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Get Ubuntu version
        id: ubuntu
        run: |
          . /etc/os-release
          echo "version=${VERSION_ID}" >> $GITHUB_OUTPUT

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: temurin
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ inputs.flutter-version }}

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ inputs.flutter-version }}
            type=raw,value=latest,enable={{is_default_branch}}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v5
        with:
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            UBUNTU_VERSION=${{ steps.ubuntu.outputs.version }}
          file-inline: |
            ARG UBUNTU_VERSION=22.04
            FROM ubuntu:${UBUNTU_VERSION}
            ENV DEBIAN_FRONTEND=noninteractive
            ENV JAVA_HOME=/opt/java/17
            ENV FLUTTER_ROOT=/opt/flutter
            ENV PATH=$JAVA_HOME/bin:$FLUTTER_ROOT/bin:$PATH

            RUN apt-get update && apt-get install -y --no-install-recommends \
                curl git zip unzip xz-utils nano && rm -rf /var/lib/apt/lists/*
            COPY --from=0 /opt/hostedtoolcache/Java_Temurin_jdk/17*  /opt/java/17
            COPY --from=0 /opt/hostedtoolcache/flutter/${{ inputs.flutter-version }}*  /opt/flutter

            WORKDIR /workspace
            CMD ["bash"]
